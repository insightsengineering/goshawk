% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/g_scatterplot.R
\name{g_scatterplot}
\alias{g_scatterplot}
\title{Function to generate a scatter plot
Output rendered by teal.goshawk module \code{g_scatterplot} returns scatter plot visualiztion}
\usage{
g_scatterplot(label = "Scatter Plot", data = ALB, param_var = "PARAMCD",
  param = "CRP", xaxis_var = "BASE", yaxis_var = "AVAL",
  trt_group = "ARM", visit = "AVISITCD", loq_flag_var = "LOQFL",
  unit = "AVALU", xmin_scale = 0, xmax_scale = 200, ymin_scale = 0,
  ymax_scale = 200, color_manual = NULL, shape_manual = c(N = 1, Y = 2,
  `NA` = 0), facet = FALSE, facet_var = "ARM", reg_line = FALSE,
  rotate_xlab = FALSE, hline = NULL, font_size = 12, dot_size = NULL,
  reg_text_size = 3)
}
\arguments{
\item{label}{text string to used to identify plot.}

\item{data}{data frame with variables which will be displayed in the plot.
Note that the data are expected to be in vertical form with the
\code{PARAMCD} variable filtering to one observation per patient per visit.}

\item{param_var}{name of variable containing biomarker codes e.g. PARAMCD.}

\item{param}{biomarker to visualize e.g. IGG.}

\item{xaxis_var}{name of variable containing biomarker results displayed on X-axis e.g. BASE.}

\item{yaxis_var}{name of variable containing biomarker results displayed on Y-axise.g. AVAL.}

\item{trt_group}{name of variable representing treatment group e.g. ARM.}

\item{visit}{name of variable containing nominal visits e.g. AVISITCD.}

\item{loq_flag_var}{name of variable containing LOQ flag e.g. LBLOQFL.}

\item{unit}{name of variable containing biomarker unit e.g. AVALU.}

\item{xmin_scale}{minimum value of xaxis_var variable for selected biomarker.}

\item{xmax_scale}{maximum value of xaxis_var variable for selected biomarker.}

\item{ymin_scale}{minimum value of yaxis_var variable for selected biomarker.}

\item{ymax_scale}{maximum value of yaxis_var variable for selected biomarker.}

\item{color_manual}{vector of colors. Currently plot uses default colors and this control is set to NULL.}

\item{shape_manual}{vector of shapes to display LOQ values vs. non-LOQ values.}

\item{facet}{set layout to use facetting.}

\item{facet_var}{variable to use for facetting.}

\item{reg_line}{include regression line and annotations for slope and coefficient in visualization. Use with facet TRUE.}

\item{rotate_xlab}{45 degree rotation of x-axis values.}

\item{hline}{y-axis value to position of horizontal line.}

\item{font_size}{control font size for title, x-axis, y-axis and legend font.}

\item{dot_size}{scatter dot size.}

\item{reg_text_size}{regression line annotation font size.}
}
\description{
A scatter plot is a type of plot using Cartesian coordinates to display values for typically two variables or
for one variable at different timepoints for a set of data.
If the points are color-coded, one additional variable can be displayed.
The data are displayed as a collection of points, each having the value of one variable or timepoint determining
the position on the horizontal axis and the value of the other variable or timepoint determining the position 
on the vertical axis.
}
\details{
This function displays a scatter plot. link to specification file \url{http://rstudio.com}
}
\examples{

\dontrun{
# Example using analysis dataset for example ASL or ADSL,
# ALB points to biomarker data stored in a typical LB structure. for example ALB or ADLB.

# for development team testing
ASL_path <- "/opt/bee/home_nas/npaszty/btk/lupus/dataadam/asl.sas7bdat"
ALB_path <- "/opt/bee/home_nas/npaszty/btk/lupus/dataadam/alb3arm.sas7bdat"

# list of biomarkers of interest. see ALB2 assignment below
param_choices <- c("CRP","ADIGG","IG","IGA","IGE","IGG","IGM","TEST")

ASL0 <- read_bce(ASL_path)
ASL <- subset(ASL0, subset = ITTFL == 'Y' & IAFL == 'Y')

ALB0 <- read_bce(ALB_path)

# post process the data to subset records per specification
ALB_SUBSET <- subset(ALB0,
              subset = PARAMCD \%in\% c(param_choices) & ITTFL == 'Y' & IAFL == 'Y' & ANLFL == 'Y' & AVISIT \%like any\% c('BASE\%','\%WEEK\%'), 
              select = c('STUDYID', 'USUBJID', 'ITTFL', 'ANLFL', 'ARM', 'ARMCD', 'AVISIT', 'AVISITN', 'PARAMCD', 'AVAL', 'AVALU', 'BASE', 'CHG', 'PCHG',
               'LBSTRESC', 'LBSTRESN'))

# calculate the minimum AVAL for each PARAMCD
PARAM_MINS <- ALB_SUBSET \%>\%
select(USUBJID, PARAMCD, AVAL) \%>\%
  filter(PARAMCD \%in\% param_choices) \%>\%
  group_by(PARAMCD) \%>\%
  summarise(AVAL_MIN=min(AVAL, na.rm=TRUE))
  
# post process the data to create several new variables and adjust existing record specific valules per specification
# - create a visit code variable - baseline record code is "BB" and week records coded to "W NN"
# - adjust existing BASELINE record values where values are missing: According to SPA this is a STREAM artifact
ALB_SUPED1 <- ALB_SUBSET \%>\% mutate(AVISITCD = paste0(substr(AVISIT,start=1, stop=1), 
                                        substr(AVISIT, start=regexpr(" ", AVISIT), stop=regexpr(" ", AVISIT)+2))) \%>\%
               mutate(AVISITCD = ifelse(AVISITCD == "BB", "BL", AVISITCD)) \%>\%
               mutate(AVISITCDN =  ifelse(AVISITCD == "BL", 0, substr(AVISITCD,start=2, stop=4))) \%>\%
               mutate(BASE = ifelse(AVISIT == "BASELINE" & is.na(BASE), AVAL, BASE)) \%>\%
               mutate(CHG = ifelse(AVISIT == "BASELINE" & is.na(CHG), 0, CHG)) \%>\%
               mutate(PCHG = ifelse(AVISIT == "BASELINE" & is.na(PCHG), 0, PCHG)) \%>\%
               mutate(ARMCD = ifelse(grepl("1", ARM), "C", ifelse(grepl("2", ARM), "B", ifelse(grepl("3", ARM), "A", NA)))) \%>\%
               mutate(TRTORD = ifelse(grepl("C", ARMCD), 1, ifelse(grepl("B", ARMCD), 2, ifelse(grepl("A", ARMCD), 3, NA))))
               # may need to add similar code for BASE2 related variables

  
# merge minimum AVAL value onto the ALB data to calculate the log2 variables and preserve the variable order
ALB_SUPED2 <- merge(ALB_SUPED1, PARAM_MINS, by="PARAMCD")[, union(names(ALB_SUPED1), names(PARAM_MINS))] \%>\%
       mutate(AVALL2 = ifelse(AVAL == 0, log2(AVAL_MIN/2), log2(AVAL))) \%>\%
       mutate(BASEL2 = ifelse(BASE == 0, log2(AVAL_MIN/2), log2(BASE))) #\%>\% need SPA to finish adding BASE2 to ALB
       #mutate(BASE2L2 = ifelse(BASE2 == 0, log2(AVAL_MIN/2), log2(AVAL)))

# for proper chronological ordering of visits in visualizations
ALB_SUPED2$AVISITCDN <- as.numeric(ALB_SUPED2$AVISITCDN) # coerce character into numeric
ALB <- ALB_SUPED2 \%>\% mutate(AVISITCD = factor(AVISITCD) \%>\% reorder(AVISITCDN))

# for representing treatment string that includes dose
ALB <- ALB \%>\%
      mutate(ARMORVAL = ARM) \%>\%
      mutate(ARM = case_when(
        ARMCD == "C" ~ "Placebo",
        ARMCD == "B" ~ "150mg QD",
        ARMCD == "A" ~ "200mg BID",
        TRUE ~ as.character(NA)))

ALB <- ALB \%>\% mutate(ARM = factor(ARM) \%>\% reorder(TRTORD))


# to test loq_flag_var
ALB <- ALB \%>\% mutate(LOQFL = ifelse(PARAMCD == "CRP" & AVAL < .5, "Y", "N"))

param <- c('CRP') # FOR TESTING: woud come from teal.goshawk.tm_g_moduleName.R
shape_manual <- c('N' = 1, 'Y' = 2, 'NA' = 0)

plot1 <- g_scatterplot(label = 'Scatter Plot',
           data = ALB,
           param_var = 'PARAMCD', # name of variable containing the biomarker names.
           param = param, # the PARAMCD value selected.
           xaxis_var = 'BASE',
           yaxis_var = 'AVAL', # name of variable containing the analysis values.
           trt_group = 'ARM',
           visit = 'AVISITCD',
           loq_flag_var = 'LOQFL',
           unit = 'AVALU',
           xmin_scale = 0,
           xmax_scale = .5,
           ymin_scale = 0,
           ymax_scale = .5,
           color_manual = NULL,
           shape_manual,
           hline = NULL,
           rotate_xlab = FALSE,
           facet = FALSE,
           facet_var = "ARM",
           reg_line = FALSE, # slope and correlation values for each ARM overwrite
           font_size = 14,
           dot_size = 2,
           reg_text_size = 3)
plot1 

}
}
\author{
Nick Paszty (npaszty) paszty.nicholas@gene.com

Balazs Toth (tothb2)  toth.balazs@gene.com
}
