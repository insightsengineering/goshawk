% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/g_lineplot.R
\name{g_lineplot}
\alias{g_lineplot}
\title{Function to create line plot of summary statistics over time.}
\usage{
g_lineplot(
  label = "Line Plot",
  data,
  biomarker_var = "PARAMCD",
  biomarker_var_label = "PARAM",
  biomarker,
  value_var = "AVAL",
  unit_var = "AVALU",
  ylim = NULL,
  trt_group,
  trt_group_level = NULL,
  shape = NULL,
  time,
  time_level = NULL,
  color_manual = NULL,
  median = FALSE,
  hline = NULL,
  xtick = waiver(),
  xlabel = xtick,
  rotate_xlab = FALSE,
  plot_font_size = 12,
  dodge = 0.4,
  plot_height = 989,
  count_threshold = 0,
  table_font_size = 12
)
}
\arguments{
\item{label}{text string to be displayed as plot label.}

\item{data}{data frame with variables to be summarized and generate statistics which will display
in the plot.}

\item{biomarker_var}{name of variable containing biomarker names.}

\item{biomarker_var_label}{name of variable containing biomarker labels.}

\item{biomarker}{biomarker name to be analyzed.}

\item{value_var}{name of variable containing biomarker results.}

\item{unit_var}{name of variable containing biomarker result unit.}

\item{ylim}{numeric vector to define y-axis range.}

\item{trt_group}{name of variable representing treatment group.}

\item{trt_group_level}{vector that can be used to define the factor level of trt_group.}

\item{shape}{categorical variable whose levels are used to split the plot lines.}

\item{time}{name of variable containing visit names.}

\item{time_level}{vector that can be used to define the factor level of time. Only use it when
x-axis variable is character or factor.}

\item{color_manual}{vector of colors.}

\item{median}{boolean whether to display median results.}

\item{hline}{numeric value representing intercept of horizontal line.}

\item{xtick}{a vector to define the tick values of time in x-axis.
Default value is waiver().}

\item{xlabel}{vector with same length of xtick to define the label of x-axis tick values.
Default value is waiver().}

\item{rotate_xlab}{boolean whether to rotate x-axis labels.}

\item{plot_font_size}{control font size for title, x-axis, y-axis and legend font.}

\item{dodge}{control position dodge.}

\item{plot_height}{height of produced plot. 989 pixels by default.}

\item{count_threshold}{\code{integer} minimum number observations needed to show the appropriate
bar and point on the plot. Default: 0}

\item{table_font_size}{\code{float} controls the font size of the values printed in the table.
Default: 12}
}
\value{
\code{ggplot} object
}
\description{
Function to create line plot of summary statistics over time.
}
\details{
Currently, the output plot can display mean and median of input value. For mean, the
error bar denotes
95\% confidence interval. For median, the error bar denotes median-25% quartile to median+75%
quartile.
}
\examples{


# Example using ADaM structure analysis dataset.

library(random.cdisc.data)
library(stringr)

# original ARM value = dose value
arm_mapping <- list("A: Drug X" = "150mg QD", "B: Placebo" = "Placebo",
"C: Combination" = "Combination")
color_manual <-  c("150mg QD" = "thistle", "Placebo" = "orange", "Combination" = "steelblue")

ASL <- cadsl[!(cadsl$ARM == "B: Placebo" & cadsl$AGE < 40), ]
ALB <- right_join(cadlb, ASL[, c("STUDYID", "USUBJID")])
var_labels <- lapply(ALB, function(x) attributes(x)$label)

ALB <- ALB \%>\%
  mutate(AVISITCD = case_when(
    AVISIT == "SCREENING" ~ "SCR",
    AVISIT == "BASELINE" ~ "BL",
    grepl("WEEK", AVISIT) ~
      paste(
        "W",
        trimws(
          substr(
            AVISIT,
            start = 6,
            stop = str_locate(AVISIT, "DAY") - 1
          )
        )
      ),
    TRUE ~ NA_character_)) \%>\%
  mutate(AVISITCDN = case_when(
    AVISITCD == "SCR" ~ -2,
    AVISITCD == "BL" ~ 0,
    grepl("W", AVISITCD) ~ as.numeric(gsub("\\\\D+", "", AVISITCD)),
    TRUE ~ NA_real_)) \%>\%
  # use ARMCD values to order treatment in visualization legend
  mutate(TRTORD = ifelse(grepl("C", ARMCD), 1,
    ifelse(grepl("B", ARMCD), 2,
      ifelse(grepl("A", ARMCD), 3, NA)))) \%>\%
  mutate(ARM = as.character(arm_mapping[match(ARM, names(arm_mapping))])) \%>\%
  mutate(ARM = factor(ARM) \%>\%
  reorder(TRTORD))
attr(ALB[["ARM"]], "label") <- var_labels[["ARM"]]

g_lineplot(label = "Line Plot",
           data = ALB,
           biomarker_var = "PARAMCD",
           biomarker = "CRP",
           value_var = "AVAL",
           trt_group = "ARM",
           shape = NULL,
           time = "AVISITCD",
           color_manual = color_manual,
           median = FALSE,
           hline = 50,
           xtick = c("BL", "W 1", "W 5"),
           xlabel = c("Baseline", "Week 1", "Week 5"),
           rotate_xlab = FALSE,
           plot_height = 600)

g_lineplot(label = "Line Plot",
           data = ALB,
           biomarker_var = "PARAMCD",
           biomarker = "CRP",
           value_var = "AVAL",
           trt_group = "ARM",
           shape = NULL,
           time = "AVISITCD",
           color_manual = NULL,
           median = FALSE,
           hline = 50,
           xtick = c("BL", "W 1", "W 5"),
           xlabel = c("Baseline", "Week 1", "Week 5"),
           rotate_xlab = FALSE,
           plot_height = 600)

g_lineplot(label = "Line Plot",
           data = ALB,
           biomarker_var = "PARAMCD",
           biomarker = "CRP",
           value_var = "AVAL",
           trt_group = "ARM",
           shape = NULL,
           time = "AVISITCD",
           color_manual = color_manual,
           median = FALSE,
           hline = 50,
           xtick = c("BL", "W 1", "W 5"),
           xlabel = c("Baseline", "Week 1", "Week 5"),
           rotate_xlab = FALSE,
           plot_height = 600,
           count_threshold = 90,
           table_font_size = 2)

g_lineplot(label = "Line Plot",
           data = ALB,
           biomarker_var = "PARAMCD",
           biomarker = "CRP",
           value_var = "AVAL",
           trt_group = "ARM",
           shape = NULL,
           time = "AVISITCDN",
           color_manual = color_manual,
           median = FALSE,
           hline = 50,
           xtick = c(0, 1, 5),
           xlabel = c("Baseline", "Week 1", "Week 5"),
           rotate_xlab = FALSE,
           plot_height = 600)

g_lineplot(label = "Line Plot",
           data = subset(ALB, SEX \%in\% c("M", "F")),
           biomarker_var = "PARAMCD",
           biomarker = "CRP",
           value_var = "AVAL",
           trt_group = "ARM",
           shape = "SEX",
           time = "AVISITCDN",
           color_manual = color_manual,
           median = FALSE,
           hline = 50,
           xtick = c(0, 1, 5),
           xlabel = c("Baseline", "Week 1", "Week 5"),
           rotate_xlab = FALSE,
           plot_height = 600)

g_lineplot(label = "Line Plot",
           data = subset(ALB, SEX \%in\% c("M", "F")),
           biomarker_var = "PARAMCD",
           biomarker = "CRP",
           value_var = "AVAL",
           trt_group = "ARM",
           shape = "SEX",
           time = "AVISITCDN",
           color_manual = NULL,
           median = FALSE,
           hline = 50,
           xtick = c(0, 1, 5),
           xlabel = c("Baseline", "Week 1", "Week 5"),
           rotate_xlab = FALSE,
           plot_height = 600)

}
\author{
Balazs Toth (toth.balazs@gene.com)

Wenyi Liu (wenyi.liu@roche.com)
}
