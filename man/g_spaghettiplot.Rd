% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/g_spaghettiplot.R
\name{g_spaghettiplot}
\alias{g_spaghettiplot}
\title{Function to create a spaghetti plot.}
\usage{
g_spaghettiplot(data, subj_id = "USUBJID", biomarker_var = "PARAMCD",
  biomarker_var_label = "PARAM", biomarker, value_var = "AVAL",
  unit_var = "AVALU", trt_group, trt_group_level = NULL, time,
  time_level = NULL, color_manual = NULL, color_comb = "#39ff14",
  ylim = NULL, alpha = 1, facet_ncol = 2, hline = NULL,
  xtick = waiver(), xlabel = xtick, rotate_xlab = FALSE,
  font_size = 12, group_stats = "NONE")
}
\arguments{
\item{data}{data frame with variables to be summarized and generate statistics which will display
in the plot.}

\item{subj_id}{unique subject id variable name.}

\item{biomarker_var}{name of variable containing biomarker names.}

\item{biomarker_var_label}{name of variable containing biomarker labels.}

\item{biomarker}{biomarker name to be analyzed.}

\item{value_var}{name of variable containing biomarker results.}

\item{unit_var}{name of variable containing biomarker units.}

\item{trt_group}{name of variable representing treatment group.}

\item{trt_group_level}{vector that can be used to define the factor level of trt_group.}

\item{time}{name of vairable containing visit names.}

\item{time_level}{vector that can be used to define the factor level of time. Only use it when 
x-axis variable is character or factor.}

\item{color_manual}{vector of colors.}

\item{color_comb}{name or hex value for combined treatment color.}

\item{ylim}{numeric vector to define y-axis range.}

\item{alpha}{subject line transparency (0 = transparent, 1 = opaque)}

\item{facet_ncol}{number of facets per row.}

\item{hline}{numeric value represnting intercept of horizontal line.}

\item{xtick}{numeric vector to define the tick values of x-axis when x variable is numeric. 
Default value is waiver().}

\item{xlabel}{vector with same length of xtick to define the label of x-axis tick values. Default
value is waiver().}

\item{rotate_xlab}{boolean whether to rotate x-axis labels.}

\item{font_size}{control font size for title, x-axis, y-axis and legend font.}

\item{group_stats}{control group mean or median overlay.}
}
\value{
\code{ggplot} object
}
\description{
This function is rendered by teal.goshawk module
}
\examples{

\dontrun{
# EXAMPLE:

# original ARM value = dose value
arm_mapping <- list("A: Drug X" = "150mg QD", "B: Placebo" = "Placebo", 
"C: Combination" = "Combination")
color_manual <-  c("150mg QD" = "#000000", "Placebo" = "#3498DB", "Combination" = "#E74C3C")

library(dplyr)
library(ggplot2)
library(random.cdisc.data)
library(stringr)

ASL <- radsl(N = 20, seed = 1)
ALB <- radlb(ASL, visit_format = "WEEK", n_assessments = 7, seed = 2)
ALB <- ALB \%>\% 
mutate(AVISITCD = case_when(
AVISIT == "SCREENING" ~ "SCR",
AVISIT == "BASELINE" ~ "BL", grepl("WEEK", AVISIT) ~ paste("W",trimws(substr(AVISIT, start=6, 
stop=str_locate(AVISIT, "DAY")-1))),
TRUE ~ as.character(NA))) \%>\%
mutate(AVISITCDN = case_when(AVISITCD == "SCR" ~ -2,
AVISITCD == "BL" ~ 0, grepl("W", AVISITCD) ~ as.numeric(gsub("\\\\D+", "", AVISITCD)), 
TRUE ~ as.numeric(NA))) \%>\%
# use ARMCD values to order treatment in visualization legend
mutate(TRTORD = ifelse(grepl("C", ARMCD), 1,
ifelse(grepl("B", ARMCD), 2,
ifelse(grepl("A", ARMCD), 3, NA)))) \%>\%
mutate(ARM = as.character(arm_mapping[match(ARM, names(arm_mapping))])) \%>\%
mutate(ARM = factor(ARM) \%>\% reorder(TRTORD))

param <- c('CRP')


g_spaghettiplot(data = ALB,
                subj_id = 'USUBJID',
                biomarker_var = 'PARAMCD',
                biomarker = 'CRP',
                value_var = 'AVAL',
                trt_group = 'ARM',
                time = 'AVISITCD',
                color_manual = color_manual,
                color_comb = "#39ff14", 
                alpha = .02,
                hline = NULL,
                rotate_xlab = FALSE,
                group_stats = "median"
                )

}

}
\author{
Wenyi Liu (wenyi.liu@roche.com)
}
