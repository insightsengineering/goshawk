% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/utils.R
\name{check_color}
\alias{check_color}
\alias{assert_color}
\title{Check that argument is a valid color}
\usage{
check_color(
  color,
  min.len = NULL,
  max.len = NULL,
  any.missing = TRUE,
  all.missing = TRUE,
  len = NULL,
  null.ok = FALSE
)

assert_color(
  color,
  min.len = NULL,
  max.len = NULL,
  any.missing = TRUE,
  all.missing = TRUE,
  len = NULL,
  null.ok = FALSE,
  .var.name = checkmate::vname(color),
  add = NULL
)
}
\arguments{
\item{color}{(\code{character})\cr
Valid color convertible to RGB scale by \code{\link[grDevices:col2rgb]{grDevices::col2rgb()}}}

\item{min.len}{[\code{integer(1)}]\cr
Minimal length of \code{x}.}

\item{max.len}{[\code{integer(1)}]\cr
Maximal length of \code{x}.}

\item{any.missing}{[\code{logical(1)}]\cr
Are vectors with missing values allowed? Default is \code{TRUE}.}

\item{all.missing}{[\code{logical(1)}]\cr
Are vectors with no non-missing values allowed? Default is \code{TRUE}.
Note that empty vectors do not have non-missing values.}

\item{len}{[\code{integer(1)}]\cr
Exact expected length of \code{x}.}

\item{null.ok}{[\code{logical(1)}]\cr
If set to \code{TRUE}, \code{x} may also be \code{NULL}.
In this case only a type check of \code{x} is performed, all additional checks are disabled.}

\item{.var.name}{[\code{character(1)}]\cr
Name of the checked object to print in assertions. Defaults to
the heuristic implemented in \code{\link[checkmate]{vname}}.}

\item{add}{[\code{AssertCollection}]\cr
Collection to store assertion messages. See \code{\link[checkmate]{AssertCollection}}.}
}
\value{
Depending on the function prefix:
 If the check is successful, the functions 
 \code{assertCharacter}/\code{assert_character} return 
 \code{x} invisibly, whereas
 \code{checkCharacter}/\code{check_character} and 
 \code{testCharacter}/\code{test_character} return 
 \code{TRUE}.
 If the check is not successful, 
 \code{assertCharacter}/\code{assert_character}
 throws an error message, 
 \code{testCharacter}/\code{test_character}
 returns \code{FALSE},
 and \code{checkCharacter}/\code{check_character} 
 return a string with the error message.
 The function \code{expect_character} always returns an
 \code{\link[testthat]{expectation}}.
}
\description{
Checks if the argument can be converted to valid RGB values space. See \code{grDevices::col2rgb}.
}
\keyword{internal}
