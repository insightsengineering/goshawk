% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/t_summarytable.R
\name{t_summarytable}
\alias{t_summarytable}
\title{Function to create a table of descriptive summary statistics to accompany plots.}
\usage{
t_summarytable(
  data,
  trt_group,
  param_var,
  param,
  xaxis_var,
  facet_var = "AVISITCD",
  loq_flag_var = "LOQFL",
  ...
)
}
\arguments{
\item{data}{name of data frame to summarize.}

\item{trt_group}{treatment group variable name e.g. ARM.}

\item{param_var}{name of variable containing biomarker codes e.g. PARAMCD.}

\item{param}{biomarker to visualize e.g. IGG.}

\item{xaxis_var}{name of variable containing biomarker results displayed on X-axis e.g. AVAL.}

\item{facet_var}{name of variable facetted on typically containing visit values e.g. AVISITCD.
If NULL then ignored. It defaults to \code{"AVISITCD"} when not provided.}

\item{loq_flag_var}{name of variable containing LOQ flag e.g. LOQFL. Defaults to \code{"LOQFL"}.}

\item{...}{additional options}
}
\description{
Output descriptive summary statistics table as a data frame. Includes biomarker, treatment,
visit,
n, mean, median, sd, min, max, \%missing values, \% LOQ values.
}
\details{
provide additional information as needed. link to specification file
\url{https://www.rstudio.com/}
}
\examples{
# Example using ADaM structure analysis dataset.

library(scda)
library(stringr)

# original ARM value = dose value
arm_mapping <- list(
  "A: Drug X" = "150mg QD", "B: Placebo" = "Placebo", "C: Combination" = "Combination"
)

ADLB <- synthetic_cdisc_data("latest")$adlb
ADLB <- ADLB \%>\%
  mutate(AVISITCD = case_when(
    AVISIT == "SCREENING" ~ "SCR",
    AVISIT == "BASELINE" ~ "BL",
    grepl("WEEK", AVISIT) ~
      paste(
        "W",
        trimws(
          substr(
            AVISIT,
            start = 6,
            stop = str_locate(AVISIT, "DAY") - 1
          )
        )
      ),
    TRUE ~ NA_character_
  )) \%>\%
  mutate(AVISITCDN = case_when(
    AVISITCD == "SCR" ~ -2,
    AVISITCD == "BL" ~ 0,
    grepl("W", AVISITCD) ~ as.numeric(gsub("\\\\D+", "", AVISITCD)),
    TRUE ~ NA_real_
  )) \%>\%
  # use ARMCD values to order treatment in visualization legend
  mutate(TRTORD = ifelse(grepl("C", ARMCD), 1,
    ifelse(grepl("B", ARMCD), 2,
      ifelse(grepl("A", ARMCD), 3, NA)
    )
  )) \%>\%
  mutate(ARM = as.character(arm_mapping[match(ARM, names(arm_mapping))])) \%>\%
  mutate(ARM = factor(ARM) \%>\%
    reorder(TRTORD))

tbl <- t_summarytable(
  data = ADLB,
  trt_group = "ARM",
  param_var = "PARAMCD",
  param = c("CRP"),
  xaxis_var = "AVAL",
  facet_var = "AVISITCD",
  loq_flag_var = "LOQFL"
)
tbl
}
\author{
Nick Paszty (npaszty) paszty.nicholas@gene.com

Balazs Toth (tothb2)  toth.balazs@gene.com
}
