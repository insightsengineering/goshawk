% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/g_correlationplot.R
\name{g_correlationplot}
\alias{g_correlationplot}
\title{Function to create a correlation plot.}
\usage{
g_correlationplot(
  label = "Correlation Plot",
  data,
  param_var = "PARAMCD",
  xaxis_param = "CRP",
  xaxis_var = "BASE",
  xvar = xvar,
  yaxis_param = "IGG",
  yaxis_var = "AVAL",
  yvar = yvar,
  trt_group = "ARM",
  visit = "AVISITCD",
  loq_flag_var = "LOQFL_COMB",
  visit_facet = TRUE,
  loq_legend = TRUE,
  unit = "AVALU",
  xmin = NA,
  xmax = NA,
  ymin = NA,
  ymax = NA,
  title_text = title_text,
  xaxis_lab = xaxis_lab,
  yaxis_lab = yaxis_lab,
  color_manual = NULL,
  shape_manual = NULL,
  facet_ncol = 2,
  facet = FALSE,
  facet_var = "ARM",
  reg_line = FALSE,
  hline_arb = NULL,
  hline_arb_color = "red",
  hline_arb_label = NULL,
  hline_vars = NULL,
  hline_vars_colors = NULL,
  hline_vars_labels = NULL,
  vline_arb = NULL,
  vline_arb_color = "green",
  vline_arb_label = NULL,
  rotate_xlab = FALSE,
  font_size = 12,
  dot_size = 2,
  reg_text_size = 3
)
}
\arguments{
\item{label}{text string to used to identify plot.}

\item{data}{ADaM structured analysis laboratory data frame e.g. ALB.}

\item{param_var}{name of variable containing biomarker codes e.g. PARAMCD.}

\item{xaxis_param}{x-axis biomarker to visualize e.g. IGG.}

\item{xaxis_var}{name of variable containing biomarker results displayed on X-axis e.g. BASE.}

\item{xvar}{x-axis analysis variable from transposed data set.}

\item{yaxis_param}{y-axis biomarker to visualize e.g. IGG.}

\item{yaxis_var}{name of variable containing biomarker results displayed on Y-axise.g. AVAL.}

\item{yvar}{y-axis analysis variable from transposed data set.}

\item{trt_group}{name of variable representing treatment group e.g. ARM.}

\item{visit}{name of variable containing nominal visits e.g. AVISITCD.}

\item{loq_flag_var}{name of variable containing LOQ flag e.g. LOQFL_COMB.}

\item{visit_facet}{visit facet toggle.}

\item{loq_legend}{`logical` whether to include LoQ legend.}

\item{unit}{name of variable containing biomarker unit e.g. AVALU.}

\item{xmin}{x-axis lower zoom limit.}

\item{xmax}{x-axis upper zoom limit.}

\item{ymin}{y-axis lower zoom limit.}

\item{ymax}{y-axis upper zoom limit.}

\item{title_text}{plot title.}

\item{xaxis_lab}{x-axis label.}

\item{yaxis_lab}{y-axis label.}

\item{color_manual}{vector of colors applied to treatment values.}

\item{shape_manual}{vector of symbols applied to LOQ values. (used with loq_flag_var).}

\item{facet_ncol}{number of facets per row.}

\item{facet}{set layout to use treatment facetting.}

\item{facet_var}{variable to use for treatment facetting.}

\item{reg_line}{include regression line and annotations for slope and coefficient.
Use with facet = TRUE.}

\item{hline_arb}{numeric value identifying intercept for arbitrary horizontal line.}

\item{hline_arb_color}{color for hline_arb that will appear on the plot.}

\item{hline_arb_label}{label for hline_arb that will appear on the legend.}

\item{hline_vars}{name(s) of variables `(ANR*)` or values `(*LOQ)` identifying intercept values.}

\item{hline_vars_colors}{color(s) for the lines of hline_arb that will appear on the plot.}

\item{hline_vars_labels}{labels(s) for hline_arb that will appear on the legend.}

\item{rotate_xlab}{45 degree rotation of x-axis label values.}

\item{font_size}{font size control for title, x-axis label, y-axis label and legend.}

\item{dot_size}{plot dot size.}

\item{reg_text_size}{font size control for regression line annotations.}
}
\description{
Default plot displays correlation facetted by visit with color attributed treatment arms and
symbol attributed LOQ values.
}
\details{
Regression uses deming model.
}
\examples{
# Example using ADaM structure analysis dataset.

library(scda)
library(stringr)
library(tidyr)

# original ARM value = dose value
arm_mapping <- list(
  "A: Drug X" = "150mg QD",
  "B: Placebo" = "Placebo",
  "C: Combination" = "Combination"
)
color_manual <- c("150mg QD" = "#000000", "Placebo" = "#3498DB", "Combination" = "#E74C3C")
# assign LOQ flag symbols: circles for "N" and triangles for "Y", squares for "NA"
shape_manual <- c("N" = 1, "Y" = 2, "NA" = 0)

ASL <- synthetic_cdisc_data("latest")$adsl
ALB <- synthetic_cdisc_data("latest")$adlb
var_labels <- lapply(ALB, function(x) attributes(x)$label)
ALB <- ALB \%>\%
  mutate(AVISITCD = case_when(
    AVISIT == "SCREENING" ~ "SCR",
    AVISIT == "BASELINE" ~ "BL",
    grepl("WEEK", AVISIT) ~
      paste(
        "W",
        trimws(
          substr(
            AVISIT,
            start = 6,
            stop = str_locate(AVISIT, "DAY") - 1
          )
        )
      ),
    TRUE ~ NA_character_)) \%>\%
  mutate(AVISITCDN = case_when(
    AVISITCD == "SCR" ~ -2,
    AVISITCD == "BL" ~ 0,
    grepl("W", AVISITCD) ~ as.numeric(gsub("\\\\D+", "", AVISITCD)),
    TRUE ~ NA_real_)) \%>\%
  # use ARMCD values to order treatment in visualization legend
  mutate(TRTORD = ifelse(grepl("C", ARMCD), 1,
    ifelse(grepl("B", ARMCD), 2,
      ifelse(grepl("A", ARMCD), 3, NA)))) \%>\%
  mutate(ARM = as.character(arm_mapping[match(ARM, names(arm_mapping))])) \%>\%
  mutate(ARM = factor(ARM) \%>\%
  reorder(TRTORD))
attr(ALB[["ARM"]], "label") <- var_labels[["ARM"]]

# given the 2 param and 2 analysis vars we need to transform the data
plot_data_t1 <- ALB \%>\%
  gather(ANLVARS, ANLVALS, PARAM, LBSTRESC, BASE2, BASE, AVAL, BASE, LOQFL) \%>\%
  mutate(ANL.PARAM = ifelse(ANLVARS \%in\% c("PARAM", "LBSTRESC", "LOQFL"),
                            paste0(ANLVARS, "_", PARAMCD),
                            paste0(ANLVARS, ".", PARAMCD))) \%>\%
  select(USUBJID, ARM, ARMCD, AVISITN, AVISITCD, ANL.PARAM, ANLVALS) \%>\%
  spread(ANL.PARAM, ANLVALS)
# the transformed analysis value variables are character and need to be converted to numeric for
# ggplot
# remove records where either of the analysis variables are NA since they will not appear on the
# plot and will ensure that LOQFL = NA level is removed
plot_data_t2 <- plot_data_t1 \%>\%
  filter(!is.na(BASE.CRP) & !is.na(AVAL.ALT)) \%>\%
  mutate_at(vars(contains(".")), as.numeric) \%>\%
  mutate(
    LOQFL_COMB = ifelse(LOQFL_CRP == "Y" | LOQFL_ALT == "Y", "Y", "N"),
    ANRLO = 50,
    ANRHI = 75
  )

g_correlationplot(
  label = "Correlation Plot",
  data = plot_data_t2,
  param_var = "PARAMCD",
  xaxis_param = c("CRP"),
  xaxis_var = "AVAL",
  xvar = "AVAL.CRP",
  yaxis_param = c("ALT"),
  yaxis_var = "BASE",
  yvar = "BASE.ALT",
  trt_group = "ARM",
  visit = "AVISITCD",
  visit_facet = TRUE,
  loq_legend = TRUE,
  unit = "AVALU",
  xmin = 20,
  xmax = 80,
  ymin = 20,
  ymax = 80,
  title_text = "Test",
  xaxis_lab = "Test x",
  yaxis_lab = "Test y",
  color_manual = color_manual,
  shape_manual = shape_manual,
  facet_ncol = 4,
  facet = FALSE,
  facet_var = "ARM",
  reg_line = FALSE,
  hline_arb = 70,
  hline_arb_color = "gray",
  hline_arb_label = "Hori_line_label",
  hline_vars = c("ANRHI", "ANRLO"),
  hline_vars_colors = c("green", "blue"),
  hline_vars_label =  c("ANRHI Label", "ANRLO Label"),
  vline_arb = 50,
  vline_arb_color = "black",
  vline_arb_label = "Vertical Line",
  rotate_xlab = FALSE,
  font_size = 14,
  dot_size = 2,
  reg_text_size = 3
)

}
\author{
Nick Paszty (npaszty) paszty.nicholas@gene.com

Balazs Toth (tothb2)  toth.balazs@gene.com
}
